const Kernel = new Blueberry()

const Player = new class {

	colorPlayer = "#fff"
	colorPlayerText = "#000"

	link_css_player = '//floagg.info/package/player-css@release-butterfly'

	videoSrc = ''

	set(tags_contenaire_for_player, setting_obj) {
		Kernel.gContenaire = tags_contenaire_for_player
		this.userSet = setting_obj


		if(this.userSet['thumbnail']) {
			Kernel.vThumbnail = this.userSet['thumbnail']
		}
		if(this.userSet['height'] && this.userSet['width']) {
			Kernel.gSize([this.userSet['height'], this.userSet['width']])
		}
		if(this.userSet['height']) {
			Kernel.vSrc = this.userSet['audio'][0]['init']+'720p.mp4'
			this.videoSrc = this.userSet['audio'][0]['init']
		}

		if(this.userSet['quality']) {
			Kernel.vAllQuality = this.userSet['quality']
		}

		if(this.userSet['audio']) {
			Kernel.vAllAudio = this.userSet['audio']
		}

		if(this.userSet['subtitle']) {
			Kernel.vAllSubtitle = this.userSet['subtitle']
		}

		Kernel.onQualityChange = () => {
			Kernel.vSrc = this.videoSrc+Kernel.vCurrentQuality+'.mp4'
		}

		Kernel.onAudioChange = (e) => {
			this.videoSrc = e
			Kernel.vSrc = this.videoSrc+Kernel.vCurrentQuality+'.mp4'
		}
		
	}

	load() {
		document.querySelector('head').insertAdjacentHTML(
			'beforeend',
			`<style type="text/css">:root { --color-primary-player-butterfly: ${this.colorPlayer}; --color-text-player-butterfly: ${this.colorPlayerText}; }</style>`
		)
		document.querySelector('head').insertAdjacentHTML(
			'beforeend',
			`<link rel="stylesheet" type="text/css" href="${this.link_css_player}">`
		)

		Kernel.init()
	}
}